#!/bin/bash
[ -f /.dockerenv ] || { echo "please run in supplied container"; exit 1; }
set -e; eval "$(environment)"

[ "${BUILD_CHROMIUM?}" == "true" ] || exit 0

external_dir="${EXTERNAL_DIR:-$PWD/external}"
config_dir="${CONFIG_DIR?}"
chromium_version=${CHROMIUM_VERSION?}
chromium_src_ref=${CHROMIUM_SRC_REF?}
chromium_dir="${external_dir}/chromium"
chromium_code="$(
	echo "$chromium_version" | awk -F"." '{ printf "%s%03d52\n",$3,$4}'
)"
cores=$(nproc)

export PATH="$PATH:$chromium_dir/depot_tools"
cd "$chromium_dir/src"
git reset --hard "$chromium_src_ref"

if ls "${config_dir}"/patches/chromium/*.patch &>/dev/null; then
	for patch in "${config_dir}"/patches/chromium/*.patch; do
		echo "Applying patch: ${patch}"
		patch -p1 --no-backup-if-mismatch < "${patch}"
	done
fi

mkdir -p "$chromium_dir/src/out/Default"
cat <<-EOF > out/Default/args.gn
	target_os = "android"
	target_cpu = "arm64"
	android_channel = "stable"
	android_default_version_name = "${chromium_version}"
	android_default_version_code = "${chromium_code}"
	is_component_build = false
	is_debug = false
	is_official_build = true
	symbol_level = 1
	fieldtrial_testing_like_official_build = true
	ffmpeg_branding = "Chrome"
	proprietary_codecs = false
EOF
gn gen "$chromium_dir/src/out/Default"

# Chromium builds often don't have dependency graphs working properly
# As a result the first build often breaks and only on the second build
# will it complete.
retry 2 autoninja \
	-j "$cores" \
	-C "$chromium_dir/src/out/Default/" \
	monochrome_public_apk
