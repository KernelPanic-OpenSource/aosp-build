#!/bin/bash
[ -f /.dockerenv ] || { echo "please run in supplied container"; exit 1; }
eval "$(environment)"
set -o nounset -o pipefail -o errexit -o errtrace
# nounset is incompatible with envsetup.sh so we set it after environment.

cores=$(nproc)
device="${DEVICE?}"
manifest_dir="${MANIFEST_DIR?}/${device}"
manifest_repo="${MANIFEST_REPO?}/${device}"
external_dir="${EXTERNAL_DIR?}"
build_kernel="${BUILD_KERNEL?}"
kernel_dir="${external_dir}/kernel/${device}"
base_dir="${BASE_DIR?}"

sudo chown -R "$(id -u)":"$(id -g)" "$HOME/build"

[[ -f ~/.gitconfig ]] || \
	printf "[color]\nui=auto\n[user]\nemail=aosp@example.org\nname=AOSP User" \
		> ~/.gitconfig

mkdir --parents "${base_dir}" "${manifest_dir}"

rsync -P --archive --verbose "${manifest_repo}/" "${manifest_dir}/"

export GIT_WORK_TREE="$manifest_dir"
export GIT_DIR="${manifest_dir}/.git"
[ -d "${manifest_dir}/.git" ] || git init
git add .
git commit --all --message "automated cache commit" || :
unset GIT_DIR GIT_WORK_TREE

echo "Cloning platform..."
cd "${base_dir}"
rm .repo/manifests/ .repo/manifests.git/ -rf
repo init \
	--no-clone-bundle \
	--manifest-url "${manifest_dir}" \
	--manifest-name base.xml
retry 3 repo sync \
	--current-branch \
	--no-tags \
	--force-sync \
	--no-clone-bundle \
	--jobs "${cores}"
repo --no-pager forall --abort-on-errors -p --verbose -c 'git reset --hard ; git clean --force -dx'

# Kernel
if [ "${build_kernel}" == "true" ]; then
	echo "Cloning kernel..."
	mkdir -p "${kernel_dir}"
	cd "${kernel_dir}"
	rm .repo/manifests/ .repo/manifests.git/ -rf
	repo init \
		--no-clone-bundle \
		--manifest-url "${manifest_dir}" \
		--manifest-name "kernel.xml"
	repo sync \
		--current-branch \
		--no-tags \
		--force-sync \
		--no-clone-bundle \
		--jobs "${cores}"
	repo --no-pager forall --abort-on-errors -p --verbose -c 'git reset --hard ; git clean --force -dx'
fi
