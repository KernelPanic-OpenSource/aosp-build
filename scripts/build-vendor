#!/bin/bash
[ -f /.dockerenv ] || { echo "please run in supplied container"; exit 1; }
set -e; eval "$(environment)"

device="${DEVICE?}"
base_dir="${BASE_DIR?}"
external_dir="${EXTERNAL_DIR?}"
temp_dir="$(mktemp -d)"
download_dir="${temp_dir}/downloads/"
vendor_dir="${external_dir}/vendor"
vendor_out="${external_dir}/vendor/out"
factory_url="https://dl.google.com/dl/android/aosp"
build_id="${BUILD_ID?}"
factory_dir="${vendor_dir}/${device}/${build_id}"
factory_hash="${FACTORY_HASH?}"
factory_crc="${FACTORY_HASH:0:8}"
ota_hash="${OTA_HASH?}"
ota_crc="${ota_hash:0:8}"
factory_file="${device}-${build_id}-factory-${factory_crc}.zip"
ota_file="${device}-ota-${build_id}-${ota_crc}.zip"

mkdir -p "${download_dir}" "${factory_dir}" "${vendor_out}"

# Fetch/extract proprietary blobs.
if [ ! -f "${factory_dir}/${factory_file}" ]; then

	wget "${factory_url}/${ota_file}" -O "${download_dir}/${ota_file}"
	file_hash="$(sha256sum "${download_dir}/${ota_file}" | cut -c1-64)"
	[[ "${ota_hash}" == "$file_hash" ]] || \
		{ ( >&2 echo "Invalid hash for ${ota_file}" ); exit 1; }
	mv "${download_dir}/${ota_file}" "${factory_dir}/${ota_file}"

	wget "${factory_url}/${factory_file}" -O "${download_dir}/${factory_file}"
	file_hash="$(sha256sum "${download_dir}/${factory_file}" | cut -c1-64)"
	[[ "${factory_hash}" == "$file_hash" ]] || \
		{ ( >&2 echo "Invalid hash for ${factory_file}" ); exit 1; }
	mv "${download_dir}/${factory_file}" "${factory_dir}/${factory_file}"

fi

"${base_dir}/vendor/android-prepare-vendor/execute-all.sh" \
	--yes \
	--device "${device}" \
	--buildID "${build_id}" \
	--output "${vendor_out}" \
	--img "${factory_dir}/${factory_file}" \
	--ota "${factory_dir}/${ota_file}"
